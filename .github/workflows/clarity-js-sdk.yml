name: clarity-js-sdk

on:
  push:
    branches:
      - 'master'
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/CHANGELOG.md'
      - '**/package.json'
      - '**/package-lock.json'
  pull_request:
  workflow_dispatch:

jobs:
  notify-start:
    runs-on: ubuntu-latest
    # Only run on non-PR events or only PRs that aren't from forks
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    outputs:
      slack_message_id: ${{ steps.slack.outputs.message_id }}
    steps:
      - name: Notify slack start
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          channel: devops-notify
          status: STARTING
          color: warning
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install deps
        run: npm install

      - name: Run lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install deps
        run: npm install

      - name: Run tests
        run: npm run test

  build-publish:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install deps
        run: npm install

      - name: Semantic Release
        # Only run on master branch
        if: github.ref == 'refs/heads/master'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: "npm run version"

      - name: Publish
        # Only run on master branch
        if: github.ref == 'refs/heads/master'
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: "npm run pub"

  notify-end:
    runs-on: ubuntu-latest
    needs:
      - notify-start
      - lint
      - test
      - build-publish
    if: always()
    steps:
      - name: Notify slack success
        # Only run on non-PR events or only PRs that aren't from forks
        if: (!contains(needs.*.result, 'failure')) && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          message_id: ${{ needs.notify-start.outputs.slack_message_id }}
          channel: devops-notify
          status: SUCCESS
          color: good

      - name: Notify slack fail
        # Only run on non-PR events or only PRs that aren't from forks
        if: (contains(needs.*.result, 'failure')) && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          message_id: ${{ needs.notify-start.outputs.slack_message_id }}
          channel: devops-notify
          status: FAILED
          color: danger
